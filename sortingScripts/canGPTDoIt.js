const colorPositionTranslations = {
	"w,o": {
		"0,0": "0,0",
		"0,1": "0,1",
		"0,2": "0,2",
		"0,3": "0,3",
		"0,4": "0,4",
		"0,5": "0,5",
		"0,6": "0,6",
		"0,7": "0,7",
		"0,8": "0,8",
		"1,1": "1,1",
		"1,2": "1,2",
		"1,3": "1,3",
		"1,4": "1,4",
		"1,5": "1,5",
		"1,6": "1,6",
		"1,7": "1,7",
		"1,8": "1,8",
		"2,1": "2,1",
		"2,2": "2,2",
		"2,3": "2,3",
		"2,4": "2,4",
		"2,5": "2,5",
		"2,6": "2,6",
		"2,7": "2,7",
		"2,8": "2,8",
		"3,1": "3,1",
		"3,2": "3,2",
		"3,3": "3,3",
		"3,4": "3,4",
		"3,5": "3,5",
		"3,6": "3,6",
		"3,7": "3,7",
		"3,8": "3,8",
		"4,1": "4,1",
		"4,2": "4,2",
		"4,3": "4,3",
		"4,4": "4,4",
		"4,5": "4,5",
		"4,6": "4,6",
		"4,7": "4,7",
		"4,8": "4,8",
		"5,1": "5,1",
		"5,2": "5,2",
		"5,3": "5,3",
		"5,4": "5,4",
		"5,5": "5,5",
		"5,6": "5,6",
		"5,7": "5,7",
		"5,8": "5,8"
	},
	"w,b": {
		"0,0": "3,0",
		"0,1": "3,1",
		"0,2": "3,2",
		"0,3": "3,3",
		"0,4": "3,4",
		"0,5": "3,5",
		"0,6": "3,6",
		"0,7": "3,7",
		"0,8": "3,8",
		"1,0": "0,0",
		"1,1": "0,1",
		"1,2": "0,2",
		"1,3": "0,3",
		"1,4": "0,4",
		"1,5": "0,5",
		"1,6": "0,6",
		"1,7": "0,7",
		"1,8": "0,8",
		"2,0": "2,2",
		"2,1": "2,5",
		"2,2": "2,8",
		"2,3": "2,1",
		"2,4": "2,4",
		"2,5": "2,7",
		"2,6": "2,0",
		"2,7": "2,3",
		"2,8": "2,6",
		"3,0": "5,0",
		"3,1": "5,1",
		"3,2": "5,2",
		"3,3": "5,3",
		"3,4": "5,4",
		"3,5": "5,5",
		"3,6": "5,6",
		"3,7": "5,7",
		"3,8": "5,8",
		"4,0": "4,2",
		"4,1": "4,3",
		"4,2": "4,8",
		"4,3": "4,7",
		"4,4": "4,4",
		"4,5": "4,1",
		"4,6": "4,0",
		"4,7": "4,5",
		"4,8": "4,6",
		"5,0": "1,0",
		"5,1": "1,1",
		"5,2": "1,2",
		"5,3": "1,3",
		"5,4": "1,4",
		"5,5": "1,5",
		"5,6": "1,6",
		"5,7": "1,7",
		"5,8": "1,8"
	},
	"w,g": {
		"0,0": "0,0",
		"0,1": "0,1",
		"0,2": "0,2",
		"0,3": "0,3",
		"0,4": "0,4",
		"0,5": "0,5",
		"0,6": "0,6",
		"0,7": "0,7",
		"0,8": "0,8",
		"1,1": "1,1",
		"1,2": "1,2",
		"1,3": "1,3",
		"1,4": "1,4",
		"1,5": "1,5",
		"1,6": undefined,
		"1,7": "1,7",
		"1,8": "1,8",
		"2,1": "2,1",
		"2,2": "2,2",
		"2,3": "2,3",
		"2,4": "2,4",
		"2,5": "2,5",
		"2,6": undefined,
		"2,7": "2,7",
		"2,8": "2,8",
		"3,1": "3,1",
		"3,2": "3,2",
		"3,3": "3,3",
		"3,4": "3,4",
		"3,5": "3,5",
		"3,6": undefined,
		"3,7": "3,7",
		"3,8": "3,8",
		"4,1": "4,1",
		"4,2": "4,2",
		"4,3": "4,3",
		"4,4": "4,4",
		"4,5": "4,5",
		"4,6": undefined,
		"4,7": "4,7",
		"4,8": "4,8",
		"5,1": "5,1",
		"5,2": "5,2",
		"5,3": "5,3",
		"5,4": "5,4",
		"5,5": "5,5",
		"5,6": undefined,
		"5,7": "5,7",
		"5,8": "5,8"
	},
	"w,r": {
		"0,0": "0,2",
		"0,1": "0,5",
		"0,2": "0,8",
		"0,3": "0,1",
		"0,4": "0,4",
		"0,5": "0,7",
		"0,6": "0,0",
		"0,7": "0,3",
		"0,8": "0,6",
		"1,1": "1,5",
		"1,2": "1,8",
		"1,3": "1,1",
		"1,4": "1,4",
		"1,5": "1,7",
		"1,6": undefined,
		"1,7": "1,3",
		"1,8": "1,6",
		"2,1": "2,5",
		"2,2": "2,8",
		"2,3": "2,1",
		"2,4": "2,4",
		"2,5": "2,7",
		"2,6": undefined,
		"2,7": "2,3",
		"2,8": "2,6",
		"3,1": "3,5",
		"3,2": "3,8",
		"3,3": "3,1",
		"3,4": "3,4",
		"3,5": "3,7",
		"3,6": undefined,
		"3,7": "3,3",
		"3,8": "3,6",
		"4,1": "4,5",
		"4,2": "4,8",
		"4,3": "4,1",
		"4,4": "4,4",
		"4,5": "4,7",
		"4,6": undefined,
		"4,7": "4,3",
		"4,8": "4,6",
		"5,1": "5,5",
		"5,2": "5,8",
		"5,3": "5,1",
		"5,4": "5,4",
		"5,5": "5,7",
		"5,6": undefined,
		"5,7": "5,3",
		"5,8": "5,6"
	}
};

function rotatePositions(face, clockwise = true) {
	const rotationMap = clockwise
		? { 0: "2", 1: "5", 2: "8", 3: "1", 4: "4", 5: "7", 6: "0", 7: "3", 8: "6" }
		: { 0: "6", 1: "3", 2: "0", 3: "7", 4: "4", 5: "1", 6: "8", 7: "5", 8: "2" };

	const rotated = {};
	for (const pos of Object.keys(face)) {
		const [row, col] = pos.split(",");
		rotated[`${row},${col}`] = face[`${row},${rotationMap[col]}`];
	}
	return rotated;
}

function generateTranslations(baseFace, targetFace) {
	const translation = {};
	for (const pos of Object.keys(baseFace)) {
		translation[pos] = targetFace[pos];
	}
	return translation;
}

const baseFaces = {
	orange: colorPositionTranslations["w,o"],
	blue: colorPositionTranslations["w,b"]
};

const targetFaces = {
	green: rotatePositions(rotatePositions(baseFaces.orange, false)),
	red: rotatePositions(baseFaces.orange)
};

colorPositionTranslations["w,g"] = generateTranslations(baseFaces.orange, targetFaces.green);
colorPositionTranslations["w,r"] = generateTranslations(baseFaces.orange, targetFaces.red);

console.log("NOPE");
